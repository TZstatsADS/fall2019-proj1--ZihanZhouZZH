sentences <- sentences[sentences != ""]
# Remove empty string
return(sentences)
}
emo_type = c("anticipation", "joy", "surprise", "trust",
"anger", "disgust", "fear", "sadness")
get_emotion <- function(text, drop.unused.emotions = F, un.as.negation = T){
sentences <- get_sent(text)
stopifnot(length(sentences) > 0)
emotions <- emotion(sentences, drop.unused.emotions = drop.unused.emotions,
un.as.negation = un.as.negation)
emotions <- emotions[emotions$emotion_count != 0 & emotions$emotion >= 0.01, ]
# Only select sentences including emotion words & ignore weak detections
result <- tapply(emotions$emotion, emotions$emotion_type, sum)
result <- result[emo_type]
#result <- result / sum(result)
# Erase the effect of number of songs within each genre
return(result)
}
Sys.time()
result <- tapply(dt_lyrics$lyrics, dt_lyrics$genre, get_emotion)
result <- lapply(result, function(x) x / sum(x))
Sys.time()
list[[1]]
result[[1]]
data.frame(nrow = 3, ncol = 2)
length(result)
result
names(result)
# Visualization
sentiment_data <- matrix(0, nrow = length(result), ncol = 9)
for(i in 1:length(result)) sentiment_data[i, 1:8] <- result[[i]]
sentiment_data[, 9] <- names(result)
sentiment_data <- data.frame(sentiment_data)
# Visualization
sentiment_data <- matrix(0, nrow = length(result), ncol = 9)
for(i in 1:length(result)) sentiment_data[i, 1:8] <- result[[i]]
sentiment_data[, 9] <- names(result)
sentiment_data <- data.frame(sentiment_data)
colnames(sentiment_data) <- c(emo_type, "genre")
sentiment_data <- matrix(0, nrow = length(result) * length(emo_type), ncol = 3)
sentiment_data <- matrix(0, nrow = length(result) * length(emo_type), ncol = 3)
for(i in 1:length(result)){
sentiment_data[(8*i-7):(8*i), 1] <- result[[i]]
sentiment_data[(8*i-7):(8*i), 2] <- emo_type
sentiment_data[(8*i-7):(8*i), 3] <- rep(names(result)[i], 8)
}
View(sentiment_data)
# Visualization
sentiment_data <- matrix(0, nrow = length(result) * length(emo_type), ncol = 3)
for(i in 1:length(result)){
sentiment_data[(8*i-7):(8*i), 1] <- result[[i]]
sentiment_data[(8*i-7):(8*i), 2] <- emo_type
sentiment_data[(8*i-7):(8*i), 3] <- rep(names(result)[i], 8)
}
sentiment_data <- data.frame(sentiment_data)
colnames(sentiment_data) <- c("Score", "Sentiment", "Genre")
sentiment_plot <- ggplot(data = sentiment_data) +
geom_line(aes(x = Sentiment, y = Score, col = Genre))
sentiment_plot
View(sentiment_data)
# Visualization
sentiment_data <- matrix(0, nrow = length(result) * length(emo_type), ncol = 3)
for(i in 1:length(result)){
sentiment_data[(8*i-7):(8*i), 1] <- result[[i]]
sentiment_data[(8*i-7):(8*i), 2] <- emo_type
sentiment_data[(8*i-7):(8*i), 3] <- rep(names(result)[i], 8)
}
sentiment_data <- data.frame(sentiment_data)
colnames(sentiment_data) <- c("Score", "Sentiment", "Genre")
sentiment_plot <- ggplot(data = sentiment_data) +
geom_path(aes(x = Sentiment, y = Score))
sentiment_plot
# Visualization
sentiment_data <- matrix(0, nrow = length(result) * length(emo_type), ncol = 3)
for(i in 1:length(result)){
sentiment_data[(8*i-7):(8*i), 1] <- result[[i]]
sentiment_data[(8*i-7):(8*i), 2] <- emo_type
sentiment_data[(8*i-7):(8*i), 3] <- rep(names(result)[i], 8)
}
sentiment_data <- data.frame(sentiment_data)
colnames(sentiment_data) <- c("Score", "Sentiment", "Genre")
sentiment_plot <- ggplot(data = sentiment_data) +
geom_path(aes(x = Genre, y = Score))
sentiment_plot
# Visualization
sentiment_data <- matrix(0, nrow = length(result) * length(emo_type), ncol = 3)
for(i in 1:length(result)){
sentiment_data[(8*i-7):(8*i), 1] <- result[[i]]
sentiment_data[(8*i-7):(8*i), 2] <- emo_type
sentiment_data[(8*i-7):(8*i), 3] <- rep(names(result)[i], 8)
}
sentiment_data <- data.frame(sentiment_data)
colnames(sentiment_data) <- c("Score", "Sentiment", "Genre")
sentiment_plot <- ggplot(data = sentiment_data) +
geom_path(aes(x = Sentiment, y = Score))
sentiment_plot
# Visualization
sentiment_data <- matrix(0, nrow = length(result) * length(emo_type), ncol = 3)
for(i in 1:length(result)){
sentiment_data[(8*i-7):(8*i), 1] <- result[[i]]
sentiment_data[(8*i-7):(8*i), 2] <- emo_type
sentiment_data[(8*i-7):(8*i), 3] <- rep(names(result)[i], 8)
}
sentiment_data <- data.frame(sentiment_data)
colnames(sentiment_data) <- c("Score", "Sentiment", "Genre")
sentiment_plot <- ggplot(data = sentiment_data) +
geom_path(aes(x = Sentiment, y = Score))
sentiment_plot
sentiment_data <- matrix(0, nrow = length(result) * length(emo_type), ncol = 3)
for(i in 1:length(result)){
sentiment_data[(8*i-7):(8*i), 1] <- result[[i]]
sentiment_data[(8*i-7):(8*i), 2] <- emo_type
sentiment_data[(8*i-7):(8*i), 3] <- rep(names(result)[i], 8)
}
sentiment_data <- data.frame(sentiment_data)
colnames(sentiment_data) <- c("Score", "Sentiment", "Genre")
View(sentiment_data)
plot(x = sentiment_data$Sentiment, y = sentiment_data$Score)
plot(x = rep(1:8, 12), y = sentiment_data$Score)
# Visualization
sentiment_data <- matrix(0, nrow = length(result) * length(emo_type), ncol = 3)
for(i in 1:length(result)){
sentiment_data[(8*i-7):(8*i), 1] <- result[[i]]
sentiment_data[(8*i-7):(8*i), 2] <- emo_type
sentiment_data[(8*i-7):(8*i), 3] <- rep(names(result)[i], 8)
}
sentiment_data <- data.frame(sentiment_data)
colnames(sentiment_data) <- c("Score", "Sentiment", "Genre")
sentiment_plot <- ggplot(data = sentiment_data) +
geom_path(aes(y = Sentiment, x = Score))
sentiment_plot
#plot(x = rep(1:8, 12), y = sentiment_data$Score)
# Visualization
sentiment_data <- matrix(0, nrow = length(result) * length(emo_type), ncol = 3)
for(i in 1:length(result)){
sentiment_data[(8*i-7):(8*i), 1] <- result[[i]]
sentiment_data[(8*i-7):(8*i), 2] <- factor(emo_type)
sentiment_data[(8*i-7):(8*i), 3] <- factor(rep(names(result)[i], 8))
}
sentiment_data <- data.frame(sentiment_data)
colnames(sentiment_data) <- c("Score", "Sentiment", "Genre")
sentiment_plot <- ggplot(data = sentiment_data) +
geom_path(aes(x = Sentiment, y = Score))
sentiment_plot
#plot(x = rep(1:8, 12), y = sentiment_data$Score)
# Visualization
sentiment_data <- matrix(0, nrow = length(result) * length(emo_type), ncol = 3)
for(i in 1:length(result)){
sentiment_data[(8*i-7):(8*i), 1] <- result[[i]]
sentiment_data[(8*i-7):(8*i), 2] <- factor(emo_type)
sentiment_data[(8*i-7):(8*i), 3] <- factor(rep(names(result)[i], 8))
}
sentiment_data <- data.frame(sentiment_data)
colnames(sentiment_data) <- c("Score", "Sentiment", "Genre")
sentiment_plot <- ggplot(data = sentiment_data) +
geom_path(aes(x = Sentiment, y = Score, col = Genre))
sentiment_plot
#plot(x = rep(1:8, 12), y = sentiment_data$Score)
View(sentiment_data)
factor(emo_type)
aa <- factor(emo_type)
aa
# Visualization
sentiment_data <- matrix(0, nrow = length(result) * length(emo_type), ncol = 3)
for(i in 1:length(result)){
sentiment_data[(8*i-7):(8*i), 1] <- result[[i]]
sentiment_data[(8*i-7):(8*i), 2] <- emo_type
sentiment_data[(8*i-7):(8*i), 3] <- rep(names(result)[i], 8)
}
sentiment_data <- data.frame(sentiment_data)
colnames(sentiment_data) <- c("Score", "Sentiment", "Genre")
sentiment_data$Sentiment <- factor(sentiment_data$Sentiment)
sentiment_data$Genre <- factor(sentiment_data$Genre)
sentiment_plot <- ggplot(data = sentiment_data) +
geom_path(aes(x = Sentiment, y = Score, col = Genre))
sentiment_plot
#plot(x = rep(1:8, 12), y = sentiment_data$Score)
# Visualization
sentiment_data <- matrix(0, nrow = length(result) * length(emo_type), ncol = 3)
for(i in 1:length(result)){
sentiment_data[(8*i-7):(8*i), 1] <- result[[i]]
sentiment_data[(8*i-7):(8*i), 2] <- emo_type
sentiment_data[(8*i-7):(8*i), 3] <- rep(names(result)[i], 8)
}
sentiment_data <- data.frame(sentiment_data)
colnames(sentiment_data) <- c("Score", "Sentiment", "Genre")
sentiment_data$Sentiment <- factor(sentiment_data$Sentiment)
sentiment_data$Genre <- factor(sentiment_data$Genre)
sentiment_plot <- ggplot(data = sentiment_data) +
geom_point(aes(x = Sentiment, y = Score, col = Genre))
sentiment_plot
#plot(x = rep(1:8, 12), y = sentiment_data$Score)
sentiment_plot <- ggplot(data = sentiment_data) +
geom_point(aes(x = Sentiment, y = Score, col = Genre)) +
scale_y_continuous(breaks = seq(0, 0.5, 0.05))
sentiment_plot
View(sentiment_data)
sentiment_data$Score
vector(sentiment_data$Score)
as.vector(sentiment_data$Score)
as.numeric(sentiment_data$Score)
sentiment_data <- matrix(0, nrow = length(result) * length(emo_type), ncol = 3)
for(i in 1:length(result)){
sentiment_data[(8*i-7):(8*i), 1] <- result[[i]]
sentiment_data[(8*i-7):(8*i), 2] <- emo_type
sentiment_data[(8*i-7):(8*i), 3] <- rep(names(result)[i], 8)
}
sentiment_data <- data.frame(sentiment_data)
colnames(sentiment_data) <- c("Score", "Sentiment", "Genre")
vector(sentiment_data$Score)
as.numeric(sentiment_data$Score)
View(sentiment_data)
result[[i]]
a <- result[[1]]
mode(a)
result[1]
a <- result[1]
a[1]
a[[2]]
a[[1]]
a <- result[[1]]
a[1]
a[1 + 1]
a[1] + 1
sentiment_data <- matrix(0, nrow = length(result) * length(emo_type), ncol = 3)
for(i in 1:length(result)){
sentiment_data[(8*i-7):(8*i), 1] <- as.numeric(result[[i]])
sentiment_data[(8*i-7):(8*i), 2] <- emo_type
sentiment_data[(8*i-7):(8*i), 3] <- rep(names(result)[i], 8)
}
sentiment_data <- data.frame(sentiment_data)
colnames(sentiment_data) <- c("Score", "Sentiment", "Genre")
sentiment_data$Score
sentiment_data <- matrix(0, nrow = length(result) * length(emo_type), ncol = 3)
for(i in 1:length(result)){
sentiment_data[(8*i-7):(8*i), 1] <- as.numeric(result[[i]])
sentiment_data[(8*i-7):(8*i), 2] <- emo_type
sentiment_data[(8*i-7):(8*i), 3] <- rep(names(result)[i], 8)
}
sentiment_data <- data.frame(sentiment_data)
colnames(sentiment_data) <- c("Score", "Sentiment", "Genre")
sentiment_data$Score
# Visualization
sentiment_data <- matrix(0, nrow = length(result) * length(emo_type), ncol = 3)
for(i in 1:length(result)){
sentiment_data[(8*i-7):(8*i), 1] <- result[[i]]
sentiment_data[(8*i-7):(8*i), 2] <- emo_type
sentiment_data[(8*i-7):(8*i), 3] <- rep(names(result)[i], 8)
}
sentiment_data <- data.frame(sentiment_data)
colnames(sentiment_data) <- c("Score", "Sentiment", "Genre")
sentiment_data$Score <- as.numeric(as.character(sentiment_data$Score)) # unfactorize
sentiment_plot <- ggplot(data = sentiment_data) +
geom_point(aes(x = Sentiment, y = Score, col = Genre))
# scale_y_continuous(breaks = seq(0, 0.5, 0.05))
sentiment_plot
#plot(x = rep(1:8, 12), y = sentiment_data$Score)
# Visualization
sentiment_data <- matrix(0, nrow = length(result) * length(emo_type), ncol = 3)
for(i in 1:length(result)){
sentiment_data[(8*i-7):(8*i), 1] <- result[[i]]
sentiment_data[(8*i-7):(8*i), 2] <- emo_type
sentiment_data[(8*i-7):(8*i), 3] <- rep(names(result)[i], 8)
}
sentiment_data <- data.frame(sentiment_data)
colnames(sentiment_data) <- c("Score", "Sentiment", "Genre")
sentiment_data$Score <- as.numeric(as.character(sentiment_data$Score)) # unfactorize
sentiment_plot <- ggplot(data = sentiment_data) +
geom_path(aes(x = Sentiment, y = Score, col = Genre))
# scale_y_continuous(breaks = seq(0, 0.5, 0.05))
sentiment_plot
#plot(x = rep(1:8, 12), y = sentiment_data$Score)
# Visualization
sentiment_data <- matrix(0, nrow = length(result) * length(emo_type), ncol = 3)
for(i in 1:length(result)){
sentiment_data[(8*i-7):(8*i), 1] <- result[[i]]
sentiment_data[(8*i-7):(8*i), 2] <- emo_type
sentiment_data[(8*i-7):(8*i), 3] <- rep(names(result)[i], 8)
}
sentiment_data <- data.frame(sentiment_data)
colnames(sentiment_data) <- c("Score", "Sentiment", "Genre")
sentiment_data$Score <- as.numeric(as.character(sentiment_data$Score)) # unfactorize
sentiment_plot <- ggplot(data = sentiment_data) +
geom_point(aes(x = Sentiment, y = Score, col = Genre))
# scale_y_continuous(breaks = seq(0, 0.5, 0.05))
sentiment_plot
#plot(x = rep(1:8, 12), y = sentiment_data$Score)
# Visualization
sentiment_data <- matrix(0, nrow = length(result) * length(emo_type), ncol = 3)
for(i in 1:length(result)){
sentiment_data[(8*i-7):(8*i), 1] <- result[[i]]
sentiment_data[(8*i-7):(8*i), 2] <- emo_type
sentiment_data[(8*i-7):(8*i), 3] <- rep(names(result)[i], 8)
}
sentiment_data <- data.frame(sentiment_data)
colnames(sentiment_data) <- c("Score", "Sentiment", "Genre")
sentiment_data$Score <- as.numeric(as.character(sentiment_data$Score)) # unfactorize
sentiment_plot <- ggplot(data = sentiment_data) +
geom_point(aes(x = Sentiment, y = Score, col = Genre)) +
geom_line(aes(x = Sentiment, y = Score, col = Genre))
# scale_y_continuous(breaks = seq(0, 0.5, 0.05))
sentiment_plot
#plot(x = rep(1:8, 12), y = sentiment_data$Score)
# Visualization
sentiment_data <- matrix(0, nrow = length(result) * length(emo_type), ncol = 3)
for(i in 1:length(result)){
sentiment_data[(8*i-7):(8*i), 1] <- result[[i]]
sentiment_data[(8*i-7):(8*i), 2] <- emo_type
sentiment_data[(8*i-7):(8*i), 3] <- rep(names(result)[i], 8)
}
sentiment_data <- data.frame(sentiment_data)
colnames(sentiment_data) <- c("Score", "Sentiment", "Genre")
sentiment_data$Score <- as.numeric(as.character(sentiment_data$Score)) # unfactorize
sentiment_plot <- ggplot(data = sentiment_data) +
geom_point(aes(x = Sentiment, y = Score, col = Genre)) +
geom_segment(aes(x = Sentiment, y = Score, col = Genre))
# scale_y_continuous(breaks = seq(0, 0.5, 0.05))
sentiment_plot
# Visualization
sentiment_data <- matrix(0, nrow = length(result) * length(emo_type), ncol = 3)
for(i in 1:length(result)){
sentiment_data[(8*i-7):(8*i), 1] <- result[[i]]
sentiment_data[(8*i-7):(8*i), 2] <- emo_type
sentiment_data[(8*i-7):(8*i), 3] <- rep(names(result)[i], 8)
}
sentiment_data <- data.frame(sentiment_data)
colnames(sentiment_data) <- c("Score", "Sentiment", "Genre")
sentiment_data$Score <- as.numeric(as.character(sentiment_data$Score)) # unfactorize
sentiment_plot <- ggplot(data = sentiment_data) +
geom_point(aes(x = Sentiment, y = Score, col = Genre)) +
#geom_path(aes(x = Sentiment, y = Score, col = Genre))
#scale_y_continuous(breaks = seq(0, 0.5, 0.05))
sentiment_plot
# Visualization
sentiment_data <- matrix(0, nrow = length(result) * length(emo_type), ncol = 3)
for(i in 1:length(result)){
sentiment_data[(8*i-7):(8*i), 1] <- result[[i]]
sentiment_data[(8*i-7):(8*i), 2] <- emo_type
sentiment_data[(8*i-7):(8*i), 3] <- rep(names(result)[i], 8)
}
sentiment_data <- data.frame(sentiment_data)
colnames(sentiment_data) <- c("Score", "Sentiment", "Genre")
sentiment_data$Score <- as.numeric(as.character(sentiment_data$Score)) # unfactorize
sentiment_plot <- ggplot(data = sentiment_data) +
geom_point(aes(x = Sentiment, y = Score, col = Genre))
#geom_path(aes(x = Sentiment, y = Score, col = Genre))
#scale_y_continuous(breaks = seq(0, 0.5, 0.05))
sentiment_plot
#plot(x = rep(1:8, 12), y = sentiment_data$Score)
sentiment_plot <- ggplot(data = sentiment_data,
aes(Sentiment, Score, col = Genre)) +
geom_point() +
geom_path()
#scale_y_continuous(breaks = seq(0, 0.5, 0.05))
sentiment_plot
sentiment_plot <- ggplot(data = sentiment_data,
aes(x = Sentiment, y = Score, col = Genre)) +
geom_point() +
geom_path()
#scale_y_continuous(breaks = seq(0, 0.5, 0.05))
sentiment_plot
# Visualization
sentiment_data <- matrix(0, nrow = length(result) * length(emo_type), ncol = 3)
for(i in 1:length(result)){
sentiment_data[(8*i-7):(8*i), 1] <- result[[i]]
sentiment_data[(8*i-7):(8*i), 2] <- emo_type
sentiment_data[(8*i-7):(8*i), 3] <- rep(names(result)[i], 8)
}
sentiment_data <- data.frame(sentiment_data)
colnames(sentiment_data) <- c("Score", "Sentiment", "Genre")
sentiment_data$Score <- as.numeric(as.character(sentiment_data$Score)) # unfactorize
sentiment_plot <- ggplot(data = sentiment_data,
aes(x = Sentiment, y = Score, col = Genre, group = Genre)) +
geom_point() +
geom_path()
#scale_y_continuous(breaks = seq(0, 0.5, 0.05))
sentiment_plot
#plot(x = rep(1:8, 12), y = sentiment_data$Score)
# Visualization
sentiment_data <- matrix(0, nrow = length(result) * length(emo_type), ncol = 3)
for(i in 1:length(result)){
sentiment_data[(8*i-7):(8*i), 1] <- result[[i]]
sentiment_data[(8*i-7):(8*i), 2] <- emo_type
sentiment_data[(8*i-7):(8*i), 3] <- rep(names(result)[i], 8)
}
sentiment_data <- data.frame(sentiment_data, stringsAsFactors = F)
colnames(sentiment_data) <- c("Score", "Sentiment", "Genre")
sentiment_data$Score <- as.numeric(as.character(sentiment_data$Score)) # unfactorize
sentiment_plot <- ggplot(data = sentiment_data,
aes(x = Sentiment, y = Score, col = Genre, group = Genre)) +
geom_point() +
geom_path()
#scale_y_continuous(breaks = seq(0, 0.5, 0.05))
sentiment_plot
#plot(x = rep(1:8, 12), y = sentiment_data$Score)
sentiment_data$Sentiment
sentiment_data <- matrix(0, nrow = length(result) * length(emo_type), ncol = 3)
for(i in 1:length(result)){
sentiment_data[(8*i-7):(8*i), 1] <- result[[i]]
sentiment_data[(8*i-7):(8*i), 2] <- emo_type
sentiment_data[(8*i-7):(8*i), 3] <- rep(names(result)[i], 8)
}
sentiment_data <- data.frame(sentiment_data)
colnames(sentiment_data) <- c("Score", "Sentiment", "Genre")
sentiment_data$Score <- as.numeric(as.character(sentiment_data$Score)) # unfactorize
sentiment_data$Sentiment
sentiment_data$Sentiment <- factor(sentiment_data$Sentiment, levels = factor(emo_type))
sentiment_data$Sentiment
sentiment_plot <- ggplot(data = sentiment_data,
aes(x = Sentiment, y = Score, col = Genre, group = Genre)) +
geom_point() +
geom_path()
#scale_y_continuous(breaks = seq(0, 0.5, 0.05))
sentiment_plot
View(sentiment_data)
cluster_data <- matrix(0, nrow = 12, ncol = 8)
cluster_data <- data.frame(cluster_data)
for(i in 1:12) cluster_data[i, ] <- result[[i]]
cluster_data[1,]
cluster_data <- matrix(0, nrow = 12, ncol = 8)
cluster_data <- data.frame(cluster_data)
for(i in 1:12) cluster_data[i, ] <- result[[i]]
colnames(cluster_data) <- emo_type
cluster_data <- matrix(0, nrow = 12, ncol = 8)
cluster_data <- data.frame(cluster_data)
for(i in 1:12) cluster_data[i, ] <- result[[i]]
colnames(cluster_data) <- emo_type
rownames(clutser_data) <- names(result)
cluster_data <- matrix(0, nrow = 12, ncol = 8)
cluster_data <- data.frame(cluster_data)
for(i in 1:12) cluster_data[i, ] <- result[[i]]
colnames(cluster_data) <- emo_type
rownames(cluster_data) <- names(result)
kmeans(cluster_data, centers = 2, iter.max = 20)
plot(kmeans(cluster_data, centers = 2, iter.max = 20))
install.packages("factoextra")
library(factoextra)
cluster_data <- matrix(0, nrow = 12, ncol = 8)
cluster_data <- data.frame(cluster_data)
for(i in 1:12) cluster_data[i, ] <- result[[i]]
colnames(cluster_data) <- emo_type
rownames(cluster_data) <- names(result)
cluster <- kmeans(cluster_data, centers = 2, iter.max = 20)
fviz_cluster(cluster)
cluster_data <- matrix(0, nrow = 12, ncol = 8)
cluster_data <- data.frame(cluster_data)
for(i in 1:12) cluster_data[i, ] <- result[[i]]
colnames(cluster_data) <- emo_type
rownames(cluster_data) <- names(result)
cluster <- kmeans(cluster_data, centers = 2, iter.max = 20)
fviz_cluster(cluster, data = cluster_data)
cluster_data <- matrix(0, nrow = 12, ncol = 8)
cluster_data <- data.frame(cluster_data)
for(i in 1:12) cluster_data[i, ] <- result[[i]]
colnames(cluster_data) <- emo_type
rownames(cluster_data) <- names(result)
cluster <- kmeans(cluster_data, centers = 3, iter.max = 20)
fviz_cluster(cluster, data = cluster_data)
cluster_data <- matrix(0, nrow = 12, ncol = 8)
cluster_data <- data.frame(cluster_data)
for(i in 1:12) cluster_data[i, ] <- result[[i]]
colnames(cluster_data) <- emo_type
rownames(cluster_data) <- names(result)
cluster <- kmeans(cluster_data, centers = 2, iter.max = 20)
fviz_cluster(cluster, data = cluster_data)
cluster_data <- matrix(0, nrow = 12, ncol = 8)
cluster_data <- data.frame(cluster_data)
for(i in 1:12) cluster_data[i, ] <- result[[i]]
colnames(cluster_data) <- emo_type
rownames(cluster_data) <- names(result)
cluster_2 <- kmeans(cluster_data, centers = 2, iter.max = 20)
cluster_3 <- kmeans(cluster_data, centers = 3, iter.max = 20)
fviz_cluster(cluster, data = cluster_data)
fviz_cluster(cluster, data = cluster_data)
cluster_data <- matrix(0, nrow = 12, ncol = 8)
cluster_data <- data.frame(cluster_data)
for(i in 1:12) cluster_data[i, ] <- result[[i]]
colnames(cluster_data) <- emo_type
rownames(cluster_data) <- names(result)
cluster_2 <- kmeans(cluster_data, centers = 2, iter.max = 20)
cluster_3 <- kmeans(cluster_data, centers = 3, iter.max = 20)
fviz_cluster(cluster_2, data = cluster_data)
fviz_cluster(cluster_3, data = cluster_data)
cluster_data <- matrix(0, nrow = 12, ncol = 8)
cluster_data <- data.frame(cluster_data)
for(i in 1:12) cluster_data[i, ] <- result[[i]]
colnames(cluster_data) <- emo_type
rownames(cluster_data) <- names(result)
cluster_2 <- kmeans(cluster_data, centers = 2, iter.max = 20)
cluster_3 <- kmeans(cluster_data, centers = 3, iter.max = 20)
fviz_cluster(cluster_2, data = cluster_data)
fviz_cluster(cluster_3, data = cluster_data)
cluster_data <- matrix(0, nrow = 12, ncol = 8)
cluster_data <- data.frame(cluster_data)
for(i in 1:12) cluster_data[i, ] <- result[[i]]
colnames(cluster_data) <- emo_type
rownames(cluster_data) <- names(result)
cluster_2 <- kmeans(cluster_data, centers = 2, iter.max = 20)
fviz_cluster(cluster_2, data = cluster_data)
save(result, file = "../output/sentiment_data.rdata")
save("result", file = "../output/sentiment_data.rdata")
save(result, file = "../output/sentiment_data.RData")
save(cluster_data, file = "../output/fff.RData")
save(cluster_data, file = "../data/fff.RData")
getwd()
setwd("/Users/HenryZhou/Desktop/GitHub/fall2019-proj1--ZihanZhouZZH/doc/P")
setwd("/Users/HenryZhou/Desktop/GitHub/fall2019-proj1--ZihanZhouZZH/doc/")
save(result, file = "../output/sentiment_data.RData")
save(result, file = "../output/sentiment_result.RData")
save(dt_lyrics, file = "../output/modified_lyrics.RData")
getwd()
